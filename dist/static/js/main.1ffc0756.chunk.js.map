{"version":3,"sources":["store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/index.js","components/Layouts/SignedInLinks.js","store/actions/authActions.js","components/Layouts/SignedOutLinks.js","components/Layouts/NavBar.js","components/Dashboard/Notification.js","components/Projects/ProjectSummary.js","components/Projects/ProjectList.js","components/Dashboard/Dashboard.js","components/Projects/ProjectDetails.js","components/Auth/SignIn.js","components/Auth/SignUp.js","store/actions/projectActions.js","components/Projects/CreateProject.js","App.js","serviceWorker.js","config/firebaseConfig.js","index.js"],"names":["initState","authError","authReducer","state","action","type","console","log","payload","message","projects","id","title","content","projectReducer","rootReducer","combineReducers","auth","project","firestore","firestoreReducer","firebase","firebaseReducer","connect","dispatch","signOutForUser","getState","getFirebase","signOut","then","profile","className","to","onClick","initials","SignedOutLinks","uid","Notification","notifications","map","item","key","style","marginTop","user","time","toDate","toString","slice","ProjectSummary","createdAt","authorFirstName","authorLastName","ProjectList","Dashboard","this","props","Component","compose","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","event","setState","target","value","handleSubmit","preventDefault","signIn","onSubmit","htmlFor","onChange","credentials","signInWithEmailAndPassword","catch","error","SignUp","firstName","lastName","singUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","createProject","authorId","add","Date","CreateProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","reactReduxFirebase","userProfile","useFirestoreForProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ffc0756.chunk.js","sourcesContent":["const initState = {\n  authError: null,\n};\n\nconst authReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'LOGIN_ERROR':\n      return { ...state, authError: 'Login failed' };\n    case 'LOGIN_SUCCESS':\n      console.log('login success');\n      return { ...state, authError: null };\n    case 'LOGOUT_SUCCESS':\n      console.log('logOut success');\n      return { ...state };\n    case 'SIGNUP_SUCCESS':\n      console.log('signUp success');\n      return { ...state, authError: null };\n    case 'SIGNUP_ERROR':\n      console.log('signUp failed');\n      return { ...state, authError: action.payload.message };\n    default:\n      return state;\n  }\n};\n\nexport default authReducer;\n","const initState = {\n  projects: [\n    { id: '1', title: 'help me find peach', content: 'blah blah blah' },\n    { id: '2', title: 'collect all the stars', content: 'blah blah blah' },\n    { id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah' },\n  ],\n};\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'ADD_PROJECT': {\n      return state;\n    }\n    case 'ADD_PROJECT_ERROR': {\n      return state;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;\n","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nimport authReducer from './authReducer';\nimport projectReducer from './projectReducer';\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore: firestoreReducer,\n  firebase: firebaseReducer,\n});\n\nexport default rootReducer;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignedInLinks = ({ signOutForUser, profile }) => {\n  console.log(profile);\n  return (\n    <ul className='right'>\n      <li>\n        <NavLink to='/create'>New Project</NavLink>\n      </li>\n      <li>\n        <a onClick={signOutForUser}>Log Out</a>\n      </li>\n      <li>\n        <NavLink to='/' className='btn btn-floating pink lighten-1'>\n          {profile.initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n};\n\nconst mupDispatchToProps = dispatch => ({\n  signOutForUser: () => dispatch(signOut()),\n});\n\nexport default connect(\n  null,\n  mupDispatchToProps\n)(SignedInLinks);\n","const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => {\n        dispatch({ type: 'LOGIN_SUCCESS' });\n      })\n      .catch(error => {\n        dispatch({ type: 'LOGIN_ERROR', payload: error });\n        console.log('login error', error);\n      });\n  };\n};\n\nconst signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n\n    firebase\n      .auth()\n      .signOut()\n      .then(() => {\n        dispatch({ type: 'LOGOUT_SUCCESS' });\n      });\n  };\n};\n\nconst singUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(newUser.email, newUser.password)\n      .then(resp => {\n        return firestore\n          .collection('users')\n          .doc(resp.user.uid)\n          .set({\n            firstName: newUser.firstName,\n            lastName: newUser.lastName,\n            initials: newUser.firstName[0] + newUser.lastName[0],\n          });\n      })\n      .then(() => {\n        dispatch({ type: 'SIGNUP_SUCCESS' });\n      })\n      .catch(payload => {\n        dispatch({ type: 'SIGNUP_ERROR', payload });\n      });\n  };\n};\n\nexport { signIn, singUp, signOut };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className='right'>\n      <li>\n        <NavLink to='/signup'>Sign up</NavLink>\n      </li>\n      <li>\n        <NavLink to='/signin'>Login</NavLink>\n      </li>\n    </ul>\n  );\n};\n\nexport default SignedOutLinks;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\n\nconst NavBar = ({ auth, profile }) => {\n  return (\n    <nav className='nav-wrapper grey darken-3'>\n      <div className='container'>\n        <Link to='/' className='brand-logo'>\n          ReactFirebase\n        </Link>\n        {auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />}\n      </div>\n    </nav>\n  );\n};\n\nconst mapStateToProps = state => {\n  console.log('current State - ', state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile,\n  };\n};\n\nexport default connect(mapStateToProps)(NavBar);\n","import React from 'react';\n\nconst Notification = ({ notifications }) => {\n  return (\n    <div className='section'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>Notification</span>\n          <ul className='notification'>\n            {notifications &&\n              notifications.map(item => (\n                <li key={item.id} style={{ marginTop: 10 }}>\n                  <span className='pink-text'>{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className='grey-text note-date'>\n                    {item.time\n                      .toDate()\n                      .toString()\n                      .slice(4, 21)}\n                  </div>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React from 'react';\n\nconst ProjectSummary = ({ project }) => {\n  console.log(project.createdAt.toDate());\n  return (\n    <div className='card z-depth-0 project-summary'>\n      <div className='card-content grey-text text-darken-3'>\n        <span className='card-title'>{project.title}</span>\n        <p>{`Posted by the ${project.authorFirstName} ${project.authorLastName}`}</p>\n        <p className='grey-text'>\n          {project.createdAt\n            .toDate()\n            .toString()\n            .slice(4, 21)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProjectSummary;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport ProjectSummary from './ProjectSummary';\n\nconst ProjectList = ({ projects }) => {\n  return (\n    <div className='project-list section'>\n      {projects &&\n        projects.map(project => (\n          <Link to={`/project/${project.id}`} key={project.id}>\n            <ProjectSummary project={project} />\n          </Link>\n        ))}\n    </div>\n  );\n};\n\nexport default ProjectList;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nimport Notification from './Notification';\nimport ProjectList from '../Projects/ProjectList';\n\nclass Dashboard extends Component {\n  state = {};\n\n  render() {\n    const { projects, auth, notifications } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to='/signin' />;\n    }\n\n    return (\n      <div className='dashboard container'>\n        <div className='row'>\n          <div className='col s12 m6'>\n            <ProjectList projects={projects} />\n          </div>\n          <div className='col s12 m5'>\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 5, orderBy: ['time', 'desc'] },\n  ])\n)(Dashboard);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nfunction ProjectDetails({ project, auth }) {\n  if (!auth.uid) {\n    return <Redirect to='/signin' />;\n  }\n\n  if (!project) {\n    return (\n      <div className='container center'>\n        <p>Loading project...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className='container section project-details'>\n      <div className='card z-depth-0'>\n        <div className='card-content'>\n          <span className='card-title'>{project.title}</span>\n          <p>{project.content}</p>\n        </div>\n        <div className='card-action gret lighten-4 grey-text'>\n          <div>{`Posted by ${project.authorFirstName} ${project.authorLastName}`}</div>\n          <div>\n            {project.createdAt\n              .toDate()\n              .toString()\n              .slice(4, 21)}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const { id } = ownProps.match.params;\n  const { projects } = state.firestore.data;\n  const currentProject = projects ? projects[id] : null;\n\n  return {\n    project: currentProject,\n    auth: state.firebase.auth,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'projects' }])\n)(ProjectDetails);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { signIn } from '../../store/actions/authActions';\n\nclass SignIn extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.signIn(this.state);\n  };\n\n  render() {\n    const { authError, auth } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to='/' />;\n    }\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign In</h5>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0' type='submit'>\n              LOGIN\n            </button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.auth.authError,\n  auth: state.firebase.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  signIn: credentials => dispatch(signIn(credentials)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignIn);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { singUp } from '../../store/actions/authActions';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n\n    this.props.singUp(this.state);\n  };\n\n  render() {\n    const { auth, authError } = this.props;\n\n    if (auth.uid) {\n      return <Redirect to='/' />;\n    }\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Sign Up</h5>\n          <div className='input-field'>\n            <label htmlFor='firstName'>First Name</label>\n            <input type='text' id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='lastName'>Last Name</label>\n            <input type='text' id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='email'>Email</label>\n            <input type='email' id='email' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='password'>Password</label>\n            <input type='password' id='password' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0' type='submit'>\n              SIGN UP\n            </button>\n            <div className='red-text center'>\n              {authError ? <p>{authError}</p> : null}\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebase.auth,\n  authError: state.auth.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  singUp: newUser => dispatch(singUp(newUser)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SignUp);\n","export const createProject = project => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firestore = getFirestore();\n    const { profile } = getState().firebase;\n    const authorId = getState().firebase.auth.uid;\n\n    firestore\n      .collection('projects')\n      .add({\n        ...project,\n        authorFirstName: profile.firstName,\n        authorLastName: profile.lastName,\n        authorId,\n        createdAt: new Date(),\n      })\n      .then(() => {\n        dispatch({\n          type: 'ADD_PROJECT',\n          payload: project,\n        });\n      })\n      .catch(error => {\n        dispatch({\n          type: 'ADD_PROJECT_ERROR',\n          payload: error,\n        });\n        console.log(error);\n      });\n  };\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nimport { createProject } from '../../store/actions/projectActions';\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: '',\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n  };\n\n  render() {\n    const { auth } = this.props;\n\n    if (!auth.uid) {\n      return <Redirect to='/signin' />;\n    }\n\n    return (\n      <div className='container'>\n        <form onSubmit={this.handleSubmit} className='white'>\n          <h5 className='grey-text text-darken-3'>Create New Project</h5>\n          <div className='input-field'>\n            <label htmlFor='title'>Title</label>\n            <input type='text' id='title' onChange={this.handleChange} />\n          </div>\n          <div className='input-field'>\n            <label htmlFor='content'>Project Content</label>\n            <textarea\n              id='content'\n              className='materialize-textarea'\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className='input-field'>\n            <button className='btn pink lighten-1 z-depth-0' type='submit'>\n              CREATE\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    auth: state.firebase.auth,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  createProject: project => dispatch(createProject(project)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CreateProject);\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/Layouts/NavBar';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport ProjectDetails from './components/Projects/ProjectDetails';\nimport SignIn from './components/Auth/SignIn';\nimport SignUp from './components/Auth/SignUp';\nimport CreateProject from './components/Projects/CreateProject';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className='App'>\n        <NavBar />\n        <Switch>\n          <Route exact path='/' component={Dashboard} />\n          <Route exact path='/signin' component={SignIn} />\n          <Route exact path='/signup' component={SignUp} />\n          <Route path='/project/:id' component={ProjectDetails} />\n          <Route path='/create' component={CreateProject} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: 'AIzaSyCO-6F_6qUi5Xbp37dn3_DQz6pjCRsNeaM',\n  authDomain: 'my-first-firebase-projec-11763.firebaseapp.com',\n  databaseURL: 'https://my-first-firebase-projec-11763.firebaseio.com',\n  projectId: 'my-first-firebase-projec-11763',\n  storageBucket: '',\n  messagingSenderId: '430850808090',\n  appId: '1:430850808090:web:015d56e08fa1c84f',\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({\n  timestampsInSnapshots: true,\n});\n\nexport default firebase;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\n\nimport rootReducer from './store/reducers';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport firebase from './config/firebaseConfig';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase),\n    reactReduxFirebase(firebase, {\n      userProfile: 'users',\n      useFirestoreForProfile: true,\n      attachAuthIsReady: true,\n    })\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n});\n\nserviceWorker.unregister();\n"],"sourceRoot":""}